{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"88\",\n    x2: \"224\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"168\",\n    x2: \"224\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"48\",\n    x2: \"80\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"48\",\n    x2: \"176\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"168\",\n    x2: \"80\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"168\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M32,176H224v24a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M224,80H32V56a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"80\",\n    x2: \"224\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"176\",\n    x2: \"224\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"48\",\n    x2: \"80\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"48\",\n    x2: \"176\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"176\",\n    x2: \"80\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"176\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM184,56h32V72H184Zm-48,0h32V72H136ZM88,56h32V72H88ZM72,200H40V184H72ZM72,72H40V56H72ZM88,200V185.3h32V200Zm48,0V185.3h32V200Zm80,0H184V185.3h9.2V184H216v16Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"80\",\n    x2: \"224\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"176\",\n    x2: \"224\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"48\",\n    x2: \"80\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"48\",\n    x2: \"176\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"176\",\n    x2: \"80\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"176\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"80\",\n    x2: \"224\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"176\",\n    x2: \"224\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"48\",\n    x2: \"80\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"48\",\n    x2: \"176\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"176\",\n    x2: \"80\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"176\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"48\",\n    x2: \"128\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"80\",\n    x2: \"224\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"176\",\n    x2: \"224\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"48\",\n    x2: \"80\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"48\",\n    x2: \"176\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"176\",\n    x2: \"80\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"176\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar FilmStrip = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nFilmStrip.displayName = \"FilmStrip\";\nexport default FilmStrip;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","d","opacity","renderPath","weight","renderPathForWeight","FilmStrip","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\FilmStrip.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"88\"\n      x2=\"224\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"168\"\n      x2=\"224\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"48\"\n      x2=\"80\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"48\"\n      x2=\"176\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"168\"\n      x2=\"80\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"168\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path d=\"M32,176H224v24a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8Z\" opacity=\"0.2\" />\n    <path d=\"M224,80H32V56a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8Z\" opacity=\"0.2\" />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"80\"\n      x2=\"224\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"176\"\n      x2=\"224\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"48\"\n      x2=\"80\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"48\"\n      x2=\"176\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"176\"\n      x2=\"80\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"176\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM184,56h32V72H184Zm-48,0h32V72H136ZM88,56h32V72H88ZM72,200H40V184H72ZM72,72H40V56H72ZM88,200V185.3h32V200Zm48,0V185.3h32V200Zm80,0H184V185.3h9.2V184H216v16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"80\"\n      x2=\"224\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"176\"\n      x2=\"224\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"48\"\n      x2=\"80\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"48\"\n      x2=\"176\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"176\"\n      x2=\"80\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"176\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"80\"\n      x2=\"224\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"176\"\n      x2=\"224\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"48\"\n      x2=\"80\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"48\"\n      x2=\"176\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"176\"\n      x2=\"80\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"176\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"48\"\n      x2=\"128\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"80\"\n      x2=\"224\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"176\"\n      x2=\"224\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"48\"\n      x2=\"80\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"48\"\n      x2=\"176\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"176\"\n      x2=\"80\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"176\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst FilmStrip = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nFilmStrip.displayName = \"FilmStrip\";\n\nexport default FilmStrip;\n"]},"metadata":{},"sourceType":"module"}