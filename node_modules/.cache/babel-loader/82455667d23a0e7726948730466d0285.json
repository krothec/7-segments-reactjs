{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"72\",\n    cy: \"184\",\n    r: \"28\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"76\",\n    x2: \"80\",\n    y2: \"116\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"76\",\n    x2: \"40\",\n    y2: \"116\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"172\",\n    x2: \"216\",\n    y2: \"212\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"176\",\n    y2: \"212\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"140 84 140 44 180 44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M140,44l12,12c38.3,38.3,10.5,84-20,94.8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"68\",\n    cy: \"188\",\n    r: \"28\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"68\",\n    cy: \"188\",\n    r: \"28\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"72\",\n    x2: \"80\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"72\",\n    x2: \"40\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"168\",\n    x2: \"216\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"168\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"136 80 136 40 176 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M136,40l16,16c40,40,8,88-24,96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M104,188a36,36,0,1,1-36-36A36,36,0,0,1,104,188ZM34.3,117.7a8.2,8.2,0,0,0,11.4,0L60,103.3l14.3,14.4a8.2,8.2,0,0,0,11.4,0,8.1,8.1,0,0,0,0-11.4L71.3,92,85.7,77.7A8.1,8.1,0,0,0,74.3,66.3L60,80.7,45.7,66.3A8.1,8.1,0,0,0,34.3,77.7L48.7,92,34.3,106.3A8.1,8.1,0,0,0,34.3,117.7Zm173,70.3,14.4-14.3a8.1,8.1,0,0,0-11.4-11.4L196,176.7l-14.3-14.4a8.1,8.1,0,0,0-11.4,11.4L184.7,188l-14.4,14.3a8.1,8.1,0,0,0,0,11.4,8.2,8.2,0,0,0,11.4,0L196,199.3l14.3,14.4a8.2,8.2,0,0,0,11.4,0,8.1,8.1,0,0,0,0-11.4ZM157.7,50.3,155.3,48H176a8,8,0,0,0,0-16H136a8,8,0,0,0-8,8V80a8,8,0,0,0,16,0V59.3l2.3,2.4c18,17.9,17.9,35.4,14.8,46.9-4.7,16.7-19.4,31.7-35,35.6a8.1,8.1,0,0,0-5.9,9.7A8,8,0,0,0,128,160l1.9-.2c21.3-5.3,40.4-24.6,46.6-47S175.9,68.6,157.7,50.3Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"68\",\n    cy: \"188\",\n    r: \"28\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"72\",\n    x2: \"80\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"72\",\n    x2: \"40\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"168\",\n    x2: \"216\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"168\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"136 80 136 40 176 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M136,40l16,16c40,40,8,88-24,96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"68\",\n    cy: \"188\",\n    r: \"28\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"72\",\n    x2: \"80\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"72\",\n    x2: \"40\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"168\",\n    x2: \"216\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"168\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"136 80 136 40 176 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M136,40l16,16c40,40,8,88-24,96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"68\",\n    cy: \"188\",\n    r: \"28\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"72\",\n    x2: \"80\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"72\",\n    x2: \"40\",\n    y2: \"112\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"168\",\n    x2: \"216\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"168\",\n    x2: \"176\",\n    y2: \"208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"136 80 136 40 176 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M136,40l16,16c40,40,8,88-24,96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Strategy = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nStrategy.displayName = \"Strategy\";\nexport default Strategy;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","cx","cy","r","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","points","d","opacity","renderPath","weight","renderPathForWeight","Strategy","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Strategy.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"72\"\n      cy=\"184\"\n      r=\"28\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"76\"\n      x2=\"80\"\n      y2=\"116\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"76\"\n      x2=\"40\"\n      y2=\"116\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"172\"\n      x2=\"216\"\n      y2=\"212\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"176\"\n      y2=\"212\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"140 84 140 44 180 44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M140,44l12,12c38.3,38.3,10.5,84-20,94.8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"68\" cy=\"188\" r=\"28\" opacity=\"0.2\" />\n    <circle\n      cx=\"68\"\n      cy=\"188\"\n      r=\"28\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"72\"\n      x2=\"80\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"72\"\n      x2=\"40\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"168\"\n      x2=\"216\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"168\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"136 80 136 40 176 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M136,40l16,16c40,40,8,88-24,96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M104,188a36,36,0,1,1-36-36A36,36,0,0,1,104,188ZM34.3,117.7a8.2,8.2,0,0,0,11.4,0L60,103.3l14.3,14.4a8.2,8.2,0,0,0,11.4,0,8.1,8.1,0,0,0,0-11.4L71.3,92,85.7,77.7A8.1,8.1,0,0,0,74.3,66.3L60,80.7,45.7,66.3A8.1,8.1,0,0,0,34.3,77.7L48.7,92,34.3,106.3A8.1,8.1,0,0,0,34.3,117.7Zm173,70.3,14.4-14.3a8.1,8.1,0,0,0-11.4-11.4L196,176.7l-14.3-14.4a8.1,8.1,0,0,0-11.4,11.4L184.7,188l-14.4,14.3a8.1,8.1,0,0,0,0,11.4,8.2,8.2,0,0,0,11.4,0L196,199.3l14.3,14.4a8.2,8.2,0,0,0,11.4,0,8.1,8.1,0,0,0,0-11.4ZM157.7,50.3,155.3,48H176a8,8,0,0,0,0-16H136a8,8,0,0,0-8,8V80a8,8,0,0,0,16,0V59.3l2.3,2.4c18,17.9,17.9,35.4,14.8,46.9-4.7,16.7-19.4,31.7-35,35.6a8.1,8.1,0,0,0-5.9,9.7A8,8,0,0,0,128,160l1.9-.2c21.3-5.3,40.4-24.6,46.6-47S175.9,68.6,157.7,50.3Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"68\"\n      cy=\"188\"\n      r=\"28\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"72\"\n      x2=\"80\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"72\"\n      x2=\"40\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"168\"\n      x2=\"216\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"168\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"136 80 136 40 176 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M136,40l16,16c40,40,8,88-24,96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"68\"\n      cy=\"188\"\n      r=\"28\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"72\"\n      x2=\"80\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"72\"\n      x2=\"40\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"168\"\n      x2=\"216\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"168\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"136 80 136 40 176 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M136,40l16,16c40,40,8,88-24,96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"68\"\n      cy=\"188\"\n      r=\"28\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"72\"\n      x2=\"80\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"72\"\n      x2=\"40\"\n      y2=\"112\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"168\"\n      x2=\"216\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"168\"\n      x2=\"176\"\n      y2=\"208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"136 80 136 40 176 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M136,40l16,16c40,40,8,88-24,96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Strategy = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nStrategy.displayName = \"Strategy\";\n\nexport default Strategy;\n"]},"metadata":{},"sourceType":"module"}