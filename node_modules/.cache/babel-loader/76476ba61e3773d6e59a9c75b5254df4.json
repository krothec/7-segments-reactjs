{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"80\",\n    x2: \"88\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"176\",\n    x2: \"136\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"158\",\n    y: \"38.6\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    transform: \"translate(-26.6 51.4) rotate(-15)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"171.2\",\n    y1: \"179.2\",\n    x2: \"217.6\",\n    y2: \"166.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"146.4\",\n    y1: \"86.4\",\n    x2: \"192.8\",\n    y2: \"74\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M40,80H88V48a8,8,0,0,0-8-8H48a8,8,0,0,0-8,8Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M88,176h48V48a8,8,0,0,0-8-8H96a8,8,0,0,0-8,8Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M171.2,179.2l46.4-12.5,8.3,30.9a8,8,0,0,1-5.7,9.8l-30.9,8.3a8,8,0,0,1-9.8-5.6Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M146.4,86.4,192.8,74l-8.3-30.9a8.1,8.1,0,0,0-9.8-5.7l-30.9,8.3a8.1,8.1,0,0,0-5.7,9.8Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"80\",\n    x2: \"88\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"176\",\n    x2: \"136\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"158\",\n    y: \"38.6\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    transform: \"translate(-26.6 51.4) rotate(-15)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"171.2\",\n    y1: \"179.2\",\n    x2: \"217.6\",\n    y2: \"166.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"146.4\",\n    y1: \"86.4\",\n    x2: \"192.8\",\n    y2: \"74\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M233.6,195.6,192.2,41a16,16,0,0,0-19.6-11.3L141.7,38l-1,.3A16,16,0,0,0,128,32H96a15.8,15.8,0,0,0-8,2.2A15.8,15.8,0,0,0,80,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H80a15.8,15.8,0,0,0,8-2.2,15.8,15.8,0,0,0,8,2.2h32a16,16,0,0,0,16-16V108.4l27.8,103.7A16,16,0,0,0,187.3,224a19.9,19.9,0,0,0,4.1-.5l30.9-8.3A16,16,0,0,0,233.6,195.6ZM176.7,45.2,183,68.3l-30.9,8.3-6.3-23.1ZM128,48V168H96V48ZM80,48V72H48V48Zm48,160H96V184h32v24Zm90.2-8.3L187.3,208,181,184.8l31-8.3,6.2,23.2Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"80\",\n    x2: \"88\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"176\",\n    x2: \"136\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"158\",\n    y: \"38.6\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    transform: \"matrix(0.97, -0.26, 0.26, 0.97, -26.56, 51.42)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"171.2\",\n    y1: \"179.2\",\n    x2: \"217.6\",\n    y2: \"166.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"146.4\",\n    y1: \"86.4\",\n    x2: \"192.8\",\n    y2: \"74\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"80\",\n    x2: \"88\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"176\",\n    x2: \"136\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"158\",\n    y: \"38.6\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    transform: \"translate(-26.6 51.4) rotate(-15)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"171.2\",\n    y1: \"179.2\",\n    x2: \"217.6\",\n    y2: \"166.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"146.4\",\n    y1: \"86.4\",\n    x2: \"192.8\",\n    y2: \"74\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"80\",\n    x2: \"88\",\n    y2: \"80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"40\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"176\",\n    x2: \"136\",\n    y2: \"176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"158\",\n    y: \"38.6\",\n    width: \"48\",\n    height: \"176\",\n    rx: \"8\",\n    transform: \"matrix(0.97, -0.26, 0.26, 0.97, -26.56, 51.42)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"171.2\",\n    y1: \"179.2\",\n    x2: \"217.6\",\n    y2: \"166.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"146.4\",\n    y1: \"86.4\",\n    x2: \"192.8\",\n    y2: \"74\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Books = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBooks.displayName = \"Books\";\nexport default Books;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","transform","d","opacity","renderPath","weight","renderPathForWeight","Books","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Books.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"80\"\n      x2=\"88\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"88\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"176\"\n      x2=\"136\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"158\"\n      y=\"38.6\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      transform=\"translate(-26.6 51.4) rotate(-15)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"171.2\"\n      y1=\"179.2\"\n      x2=\"217.6\"\n      y2=\"166.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"146.4\"\n      y1=\"86.4\"\n      x2=\"192.8\"\n      y2=\"74\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path d=\"M40,80H88V48a8,8,0,0,0-8-8H48a8,8,0,0,0-8,8Z\" opacity=\"0.2\" />\n    <path d=\"M88,176h48V48a8,8,0,0,0-8-8H96a8,8,0,0,0-8,8Z\" opacity=\"0.2\" />\n    <path\n      d=\"M171.2,179.2l46.4-12.5,8.3,30.9a8,8,0,0,1-5.7,9.8l-30.9,8.3a8,8,0,0,1-9.8-5.6Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M146.4,86.4,192.8,74l-8.3-30.9a8.1,8.1,0,0,0-9.8-5.7l-30.9,8.3a8.1,8.1,0,0,0-5.7,9.8Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"80\"\n      x2=\"88\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"88\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"176\"\n      x2=\"136\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"158\"\n      y=\"38.6\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      transform=\"translate(-26.6 51.4) rotate(-15)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"171.2\"\n      y1=\"179.2\"\n      x2=\"217.6\"\n      y2=\"166.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"146.4\"\n      y1=\"86.4\"\n      x2=\"192.8\"\n      y2=\"74\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M233.6,195.6,192.2,41a16,16,0,0,0-19.6-11.3L141.7,38l-1,.3A16,16,0,0,0,128,32H96a15.8,15.8,0,0,0-8,2.2A15.8,15.8,0,0,0,80,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H80a15.8,15.8,0,0,0,8-2.2,15.8,15.8,0,0,0,8,2.2h32a16,16,0,0,0,16-16V108.4l27.8,103.7A16,16,0,0,0,187.3,224a19.9,19.9,0,0,0,4.1-.5l30.9-8.3A16,16,0,0,0,233.6,195.6ZM176.7,45.2,183,68.3l-30.9,8.3-6.3-23.1ZM128,48V168H96V48ZM80,48V72H48V48Zm48,160H96V184h32v24Zm90.2-8.3L187.3,208,181,184.8l31-8.3,6.2,23.2Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"80\"\n      x2=\"88\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"88\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"176\"\n      x2=\"136\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"158\"\n      y=\"38.6\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      transform=\"matrix(0.97, -0.26, 0.26, 0.97, -26.56, 51.42)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"171.2\"\n      y1=\"179.2\"\n      x2=\"217.6\"\n      y2=\"166.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"146.4\"\n      y1=\"86.4\"\n      x2=\"192.8\"\n      y2=\"74\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"80\"\n      x2=\"88\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"88\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"176\"\n      x2=\"136\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"158\"\n      y=\"38.6\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      transform=\"translate(-26.6 51.4) rotate(-15)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"171.2\"\n      y1=\"179.2\"\n      x2=\"217.6\"\n      y2=\"166.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"146.4\"\n      y1=\"86.4\"\n      x2=\"192.8\"\n      y2=\"74\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"80\"\n      x2=\"88\"\n      y2=\"80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"88\"\n      y=\"40\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"176\"\n      x2=\"136\"\n      y2=\"176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"158\"\n      y=\"38.6\"\n      width=\"48\"\n      height=\"176\"\n      rx=\"8\"\n      transform=\"matrix(0.97, -0.26, 0.26, 0.97, -26.56, 51.42)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"171.2\"\n      y1=\"179.2\"\n      x2=\"217.6\"\n      y2=\"166.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"146.4\"\n      y1=\"86.4\"\n      x2=\"192.8\"\n      y2=\"74\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Books = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBooks.displayName = \"Books\";\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}