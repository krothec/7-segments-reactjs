{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.9\",\n    y: \"82.7\",\n    width: \"226.3\",\n    height: \"90.51\",\n    rx: \"45.3\",\n    transform: \"translate(-53 128) rotate(-45)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"160.1\",\n    y1: \"104.1\",\n    x2: \"176.5\",\n    y2: \"88.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M112,208a45.2,45.2,0,0,1-64,0h0a45.2,45.2,0,0,1,0-64L96,96l64,64Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"14.9\",\n    y: \"82.7\",\n    width: \"226.3\",\n    height: \"90.51\",\n    rx: \"45.3\",\n    transform: \"translate(-53 128) rotate(-45)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160.1\",\n    y1: \"112.1\",\n    x2: \"184.5\",\n    y2: \"88.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M213.7,42.3a53.4,53.4,0,0,0-75.4,0l-96,96a53.3,53.3,0,0,0,75.4,75.4l96-96A53.5,53.5,0,0,0,213.7,42.3Zm-11.4,64L160,148.7,107.3,96l42.4-42.3a36.9,36.9,0,0,1,52.6,0A37.1,37.1,0,0,1,202.3,106.3ZM190.2,82.9a7.9,7.9,0,0,1-.2,11.3l-24.4,23.6a7.9,7.9,0,0,1-11.3-.2,7.9,7.9,0,0,1,.2-11.3l24.4-23.6A8,8,0,0,1,190.2,82.9Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.9\",\n    y: \"82.7\",\n    width: \"226.3\",\n    height: \"90.51\",\n    rx: \"45.3\",\n    transform: \"translate(-53 128) rotate(-45)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"160.1\",\n    y1: \"112.1\",\n    x2: \"184.5\",\n    y2: \"88.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.9\",\n    y: \"82.7\",\n    width: \"226.3\",\n    height: \"90.51\",\n    rx: \"45.3\",\n    transform: \"translate(-53 128) rotate(-45)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"160.1\",\n    y1: \"112.1\",\n    x2: \"184.5\",\n    y2: \"88.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.9\",\n    y: \"82.7\",\n    width: \"226.3\",\n    height: \"90.51\",\n    rx: \"45.3\",\n    transform: \"translate(-53 128) rotate(-45)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160.1\",\n    y1: \"112.1\",\n    x2: \"184.5\",\n    y2: \"88.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Pill = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nPill.displayName = \"Pill\";\nexport default Pill;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","d","opacity","renderPath","weight","renderPathForWeight","Pill","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Pill.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"14.9\"\n      y=\"82.7\"\n      width=\"226.3\"\n      height=\"90.51\"\n      rx=\"45.3\"\n      transform=\"translate(-53 128) rotate(-45)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"160.1\"\n      y1=\"104.1\"\n      x2=\"176.5\"\n      y2=\"88.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M112,208a45.2,45.2,0,0,1-64,0h0a45.2,45.2,0,0,1,0-64L96,96l64,64Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"14.9\"\n      y=\"82.7\"\n      width=\"226.3\"\n      height=\"90.51\"\n      rx=\"45.3\"\n      transform=\"translate(-53 128) rotate(-45)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160.1\"\n      y1=\"112.1\"\n      x2=\"184.5\"\n      y2=\"88.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M213.7,42.3a53.4,53.4,0,0,0-75.4,0l-96,96a53.3,53.3,0,0,0,75.4,75.4l96-96A53.5,53.5,0,0,0,213.7,42.3Zm-11.4,64L160,148.7,107.3,96l42.4-42.3a36.9,36.9,0,0,1,52.6,0A37.1,37.1,0,0,1,202.3,106.3ZM190.2,82.9a7.9,7.9,0,0,1-.2,11.3l-24.4,23.6a7.9,7.9,0,0,1-11.3-.2,7.9,7.9,0,0,1,.2-11.3l24.4-23.6A8,8,0,0,1,190.2,82.9Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"14.9\"\n      y=\"82.7\"\n      width=\"226.3\"\n      height=\"90.51\"\n      rx=\"45.3\"\n      transform=\"translate(-53 128) rotate(-45)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"160.1\"\n      y1=\"112.1\"\n      x2=\"184.5\"\n      y2=\"88.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"14.9\"\n      y=\"82.7\"\n      width=\"226.3\"\n      height=\"90.51\"\n      rx=\"45.3\"\n      transform=\"translate(-53 128) rotate(-45)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"160.1\"\n      y1=\"112.1\"\n      x2=\"184.5\"\n      y2=\"88.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"14.9\"\n      y=\"82.7\"\n      width=\"226.3\"\n      height=\"90.51\"\n      rx=\"45.3\"\n      transform=\"translate(-53 128) rotate(-45)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160.1\"\n      y1=\"112.1\"\n      x2=\"184.5\"\n      y2=\"88.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Pill = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPill.displayName = \"Pill\";\n\nexport default Pill;\n"]},"metadata":{},"sourceType":"module"}