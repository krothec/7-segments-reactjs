{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"46\",\n    y: \"38\",\n    width: \"144\",\n    height: \"180\",\n    rx: \"16\",\n    transform: \"translate(246 10) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"64\",\n    y1: \"164\",\n    x2: \"64\",\n    y2: \"92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"100\",\n    y1: \"164\",\n    x2: \"100\",\n    y2: \"92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"136\",\n    y1: \"164\",\n    x2: \"136\",\n    y2: \"92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"244\",\n    y1: \"96\",\n    x2: \"244\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"142.4\",\n    y1: \"168\",\n    x2: \"142.4\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"105.6\",\n    y1: \"168\",\n    x2: \"105.6\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"68.8\",\n    y1: \"168\",\n    x2: \"68.8\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M248,88a8,8,0,0,0-8,8v64a8,8,0,0,0,16,0V96A8,8,0,0,0,248,88Z\"\n  }), React.createElement(\"path\", {\n    d: \"M200,48H48A24.1,24.1,0,0,0,24,72V184a24.1,24.1,0,0,0,24,24H200a24.1,24.1,0,0,0,24-24V72A24.1,24.1,0,0,0,200,48Zm8,136a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V72a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8Z\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"80\",\n    width: \"96\",\n    height: \"96\",\n    rx: \"8\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"142.4\",\n    y1: \"168\",\n    x2: \"142.4\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"105.6\",\n    y1: \"168\",\n    x2: \"105.6\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"68.8\",\n    y1: \"168\",\n    x2: \"68.8\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"142.4\",\n    y1: \"168\",\n    x2: \"142.4\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"105.6\",\n    y1: \"168\",\n    x2: \"105.6\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"68.8\",\n    y1: \"168\",\n    x2: \"68.8\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"142.4\",\n    y1: \"168\",\n    x2: \"142.4\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"105.6\",\n    y1: \"168\",\n    x2: \"105.6\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"68.8\",\n    y1: \"168\",\n    x2: \"68.8\",\n    y2: \"88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar BatteryHigh = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBatteryHigh.displayName = \"BatteryHigh\";\nexport default BatteryHigh;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x","y","width","height","rx","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","d","renderPath","weight","renderPathForWeight","BatteryHigh","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\BatteryHigh.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"46\"\n      y=\"38\"\n      width=\"144\"\n      height=\"180\"\n      rx=\"16\"\n      transform=\"translate(246 10) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"64\"\n      y1=\"164\"\n      x2=\"64\"\n      y2=\"92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"100\"\n      y1=\"164\"\n      x2=\"100\"\n      y2=\"92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"136\"\n      y1=\"164\"\n      x2=\"136\"\n      y2=\"92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"244\"\n      y1=\"96\"\n      x2=\"244\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"142.4\"\n      y1=\"168\"\n      x2=\"142.4\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"105.6\"\n      y1=\"168\"\n      x2=\"105.6\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"68.8\"\n      y1=\"168\"\n      x2=\"68.8\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M248,88a8,8,0,0,0-8,8v64a8,8,0,0,0,16,0V96A8,8,0,0,0,248,88Z\" />\n    <path d=\"M200,48H48A24.1,24.1,0,0,0,24,72V184a24.1,24.1,0,0,0,24,24H200a24.1,24.1,0,0,0,24-24V72A24.1,24.1,0,0,0,200,48Zm8,136a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V72a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8Z\" />\n    <rect x=\"56\" y=\"80\" width=\"96\" height=\"96\" rx=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"142.4\"\n      y1=\"168\"\n      x2=\"142.4\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"105.6\"\n      y1=\"168\"\n      x2=\"105.6\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"68.8\"\n      y1=\"168\"\n      x2=\"68.8\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"142.4\"\n      y1=\"168\"\n      x2=\"142.4\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"105.6\"\n      y1=\"168\"\n      x2=\"105.6\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"68.8\"\n      y1=\"168\"\n      x2=\"68.8\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"142.4\"\n      y1=\"168\"\n      x2=\"142.4\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"105.6\"\n      y1=\"168\"\n      x2=\"105.6\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"68.8\"\n      y1=\"168\"\n      x2=\"68.8\"\n      y2=\"88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst BatteryHigh = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBatteryHigh.displayName = \"BatteryHigh\";\n\nexport default BatteryHigh;\n"]},"metadata":{},"sourceType":"module"}