{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"216\",\n    x2: \"216\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"216\",\n    x2: \"216\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H88V140H84A68.1,68.1,0,0,1,16,72a28,28,0,0,1,56,0A12,12,0,0,0,84,84h4V56a40,40,0,0,1,80,0v68h4a12,12,0,0,0,12-12,28,28,0,0,1,56,0,68.1,68.1,0,0,1-68,68h-4v28h48A8,8,0,0,1,224,216Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"216\",\n    x2: \"216\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"216\",\n    x2: \"216\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"216\",\n    x2: \"216\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Cactus = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCactus.displayName = \"Cactus\";\nexport default Cactus;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","opacity","renderPath","weight","renderPathForWeight","Cactus","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Cactus.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"216\"\n      x2=\"216\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44Z\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"40\"\n      y1=\"216\"\n      x2=\"216\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H88V140H84A68.1,68.1,0,0,1,16,72a28,28,0,0,1,56,0A12,12,0,0,0,84,84h4V56a40,40,0,0,1,80,0v68h4a12,12,0,0,0,12-12,28,28,0,0,1,56,0,68.1,68.1,0,0,1-68,68h-4v28h48A8,8,0,0,1,224,216Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"216\"\n      x2=\"216\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"216\"\n      x2=\"216\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"216\"\n      x2=\"216\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,216V132H84A60,60,0,0,1,24,72h0A20.1,20.1,0,0,1,44,52h0A20.1,20.1,0,0,1,64,72h0A20.1,20.1,0,0,0,84,92H96V56a32,32,0,0,1,32-32h0a32,32,0,0,1,32,32v76h12a20.1,20.1,0,0,0,20-20h0a20.1,20.1,0,0,1,20-20h0a20.1,20.1,0,0,1,20,20h0a60,60,0,0,1-60,60H160v44\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Cactus = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCactus.displayName = \"Cactus\";\n\nexport default Cactus;\n"]},"metadata":{},"sourceType":"module"}