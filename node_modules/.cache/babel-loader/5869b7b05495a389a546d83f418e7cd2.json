{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"100\",\n    y1: \"12\",\n    x2: \"156\",\n    y2: \"12\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"48\",\n    width: \"144\",\n    height: \"180\",\n    rx: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"128 178 144 138 112 138 128 98\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"40\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"8\",\n    x2: \"160\",\n    y2: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"40\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"128 172 144 132 112 132 128 92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M96,16h64a8,8,0,0,0,0-16H96a8,8,0,0,0,0,16Z\"\n  }), React.createElement(\"path\", {\n    d: \"M184,32H72A24.1,24.1,0,0,0,48,56V208a24.1,24.1,0,0,0,24,24H184a24.1,24.1,0,0,0,24-24V56A24.1,24.1,0,0,0,184,32ZM151.4,135l-16,40a7.9,7.9,0,0,1-7.4,5,8,8,0,0,1-3-.6,7.9,7.9,0,0,1-4.4-10.4l11.6-29H112a7.9,7.9,0,0,1-6.6-3.5,8,8,0,0,1-.8-7.5l16-40a8,8,0,1,1,14.8,6l-11.6,29H144a7.9,7.9,0,0,1,6.6,3.5A8,8,0,0,1,151.4,135Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"8\",\n    x2: \"160\",\n    y2: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"40\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"128 172 144 132 112 132 128 92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"8\",\n    x2: \"160\",\n    y2: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"40\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"128 172 144 132 112 132 128 92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"8\",\n    x2: \"160\",\n    y2: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"40\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"128 172 144 132 112 132 128 92\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar BatteryChargingVertical = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBatteryChargingVertical.displayName = \"BatteryChargingVertical\";\nexport default BatteryChargingVertical;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","points","opacity","d","renderPath","weight","renderPathForWeight","BatteryChargingVertical","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\BatteryChargingVertical.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"100\"\n      y1=\"12\"\n      x2=\"156\"\n      y2=\"12\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"56\"\n      y=\"48\"\n      width=\"144\"\n      height=\"180\"\n      rx=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"128 178 144 138 112 138 128 98\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"56\" y=\"40\" width=\"144\" height=\"184\" rx=\"16\" opacity=\"0.2\" />\n    <line\n      x1=\"96\"\n      y1=\"8\"\n      x2=\"160\"\n      y2=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"56\"\n      y=\"40\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"128 172 144 132 112 132 128 92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M96,16h64a8,8,0,0,0,0-16H96a8,8,0,0,0,0,16Z\" />\n    <path d=\"M184,32H72A24.1,24.1,0,0,0,48,56V208a24.1,24.1,0,0,0,24,24H184a24.1,24.1,0,0,0,24-24V56A24.1,24.1,0,0,0,184,32ZM151.4,135l-16,40a7.9,7.9,0,0,1-7.4,5,8,8,0,0,1-3-.6,7.9,7.9,0,0,1-4.4-10.4l11.6-29H112a7.9,7.9,0,0,1-6.6-3.5,8,8,0,0,1-.8-7.5l16-40a8,8,0,1,1,14.8,6l-11.6,29H144a7.9,7.9,0,0,1,6.6,3.5A8,8,0,0,1,151.4,135Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"8\"\n      x2=\"160\"\n      y2=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"56\"\n      y=\"40\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"128 172 144 132 112 132 128 92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"8\"\n      x2=\"160\"\n      y2=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"56\"\n      y=\"40\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"128 172 144 132 112 132 128 92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"8\"\n      x2=\"160\"\n      y2=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"56\"\n      y=\"40\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"128 172 144 132 112 132 128 92\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst BatteryChargingVertical = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => <IconBase ref={ref} {...props} renderPath={renderPath} />\n);\n\nBatteryChargingVertical.displayName = \"BatteryChargingVertical\";\n\nexport default BatteryChargingVertical;\n"]},"metadata":{},"sourceType":"module"}