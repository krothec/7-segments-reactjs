{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"168 48 208 48 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"88 208 48 208 48 168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 168 208 208 168 208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"48 88 48 48 88 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"168 48 208 48 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"88 208 48 208 48 168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 168 208 208 168 208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"48 88 48 48 88 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M216,48V88a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3l-40-40a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,168,40h40A8,8,0,0,1,216,48ZM53.7,162.3a8.4,8.4,0,0,0-8.8-1.7A8,8,0,0,0,40,168v40a8,8,0,0,0,8,8H88a8,8,0,0,0,7.4-4.9,8.4,8.4,0,0,0-1.7-8.8Zm157.4-1.7a8.4,8.4,0,0,0-8.8,1.7l-40,40a8.4,8.4,0,0,0-1.7,8.8A8,8,0,0,0,168,216h40a8,8,0,0,0,8-8V168A8,8,0,0,0,211.1,160.6ZM88,40H48a8,8,0,0,0-8,8V88a8,8,0,0,0,4.9,7.4A8.5,8.5,0,0,0,48,96a8.3,8.3,0,0,0,5.7-2.3l40-40a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,88,40Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"168 48 208 48 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"88 208 48 208 48 168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 168 208 208 168 208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"48 88 48 48 88 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"168 48 208 48 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"88 208 48 208 48 168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 168 208 208 168 208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"48 88 48 48 88 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"168 48 208 48 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"88 208 48 208 48 168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"208 168 208 208 168 208\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"48 88 48 48 88 48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar CornersOut = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCornersOut.displayName = \"CornersOut\";\nexport default CornersOut;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","CornersOut","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\CornersOut.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"168 48 208 48 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"88 208 48 208 48 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"208 168 208 208 168 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"48 88 48 48 88 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polyline\n      points=\"168 48 208 48 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"88 208 48 208 48 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"208 168 208 208 168 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"48 88 48 48 88 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,48V88a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3l-40-40a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,168,40h40A8,8,0,0,1,216,48ZM53.7,162.3a8.4,8.4,0,0,0-8.8-1.7A8,8,0,0,0,40,168v40a8,8,0,0,0,8,8H88a8,8,0,0,0,7.4-4.9,8.4,8.4,0,0,0-1.7-8.8Zm157.4-1.7a8.4,8.4,0,0,0-8.8,1.7l-40,40a8.4,8.4,0,0,0-1.7,8.8A8,8,0,0,0,168,216h40a8,8,0,0,0,8-8V168A8,8,0,0,0,211.1,160.6ZM88,40H48a8,8,0,0,0-8,8V88a8,8,0,0,0,4.9,7.4A8.5,8.5,0,0,0,48,96a8.3,8.3,0,0,0,5.7-2.3l40-40a8.4,8.4,0,0,0,1.7-8.8A8,8,0,0,0,88,40Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"168 48 208 48 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"88 208 48 208 48 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"208 168 208 208 168 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"48 88 48 48 88 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"168 48 208 48 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"88 208 48 208 48 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"208 168 208 208 168 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"48 88 48 48 88 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"168 48 208 48 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"88 208 48 208 48 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"208 168 208 208 168 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"48 88 48 48 88 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CornersOut = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCornersOut.displayName = \"CornersOut\";\n\nexport default CornersOut;\n"]},"metadata":{},"sourceType":"module"}