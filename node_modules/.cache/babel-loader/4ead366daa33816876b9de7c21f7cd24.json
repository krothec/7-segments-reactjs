{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"134.9\",\n    x2: \"224.1\",\n    y2: \"36.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M88,134.9,224.1,36.6h0a7.8,7.8,0,0,0-6.2-.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"134.9\",\n    x2: \"224.1\",\n    y2: \"36.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M231.3,31.7A16.1,16.1,0,0,0,215,29L30.4,101.5a15.8,15.8,0,0,0-10.1,16.3,16,16,0,0,0,12.8,14.3L80,141.4V200a16,16,0,0,0,9.9,14.8A16.6,16.6,0,0,0,96,216a15.8,15.8,0,0,0,11.3-4.7l26-25.9L172.6,220a16,16,0,0,0,10.5,4,14.2,14.2,0,0,0,5-.8,15.9,15.9,0,0,0,10.7-11.6L236.4,47.4A16,16,0,0,0,231.3,31.7ZM183.2,208l-82.4-72.5L219.5,49.8Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"134.9\",\n    x2: \"224.1\",\n    y2: \"36.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"134.9\",\n    x2: \"224.1\",\n    y2: \"36.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"134.9\",\n    x2: \"224.1\",\n    y2: \"36.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar TelegramLogo = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nTelegramLogo.displayName = \"TelegramLogo\";\nexport default TelegramLogo;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","renderPath","weight","renderPathForWeight","TelegramLogo","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\TelegramLogo.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"134.9\"\n      x2=\"224.1\"\n      y2=\"36.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M88,134.9,224.1,36.6h0a7.8,7.8,0,0,0-6.2-.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      opacity=\"0.2\"\n    />\n    <path d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9Z\" opacity=\"0.2\" />\n    <path\n      d=\"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"134.9\"\n      x2=\"224.1\"\n      y2=\"36.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M231.3,31.7A16.1,16.1,0,0,0,215,29L30.4,101.5a15.8,15.8,0,0,0-10.1,16.3,16,16,0,0,0,12.8,14.3L80,141.4V200a16,16,0,0,0,9.9,14.8A16.6,16.6,0,0,0,96,216a15.8,15.8,0,0,0,11.3-4.7l26-25.9L172.6,220a16,16,0,0,0,10.5,4,14.2,14.2,0,0,0,5-.8,15.9,15.9,0,0,0,10.7-11.6L236.4,47.4A16,16,0,0,0,231.3,31.7ZM183.2,208l-82.4-72.5L219.5,49.8Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"134.9\"\n      x2=\"224.1\"\n      y2=\"36.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"134.9\"\n      x2=\"224.1\"\n      y2=\"36.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M88,134.9,177.9,214a8,8,0,0,0,13.1-4.2L228.6,45.6a8,8,0,0,0-10.7-9.2L33.3,108.9c-7.4,2.9-6.4,13.7,1.4,15.3Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"134.9\"\n      x2=\"224.1\"\n      y2=\"36.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M132.9,174.4l-31.2,31.2A8,8,0,0,1,88,200V134.9\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TelegramLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTelegramLogo.displayName = \"TelegramLogo\";\n\nexport default TelegramLogo;\n"]},"metadata":{},"sourceType":"module"}