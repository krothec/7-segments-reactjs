{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroth\\\\React\\\\7-segments\\\\src\\\\components\\\\SegmentsDisplay\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { SegmentA, SegmentB, SegmentC, SegmentD, SegmentE, SegmentF, SegmentG, Display } from './styles';\nimport { Context } from '../../context/Context';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SegmentsDisplay(mapNumber) {\n  _s();\n\n  const context = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Display, {\n    className: \"Display\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentA, {\n      color: mapNumber && mapNumber.props[0][0] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentB, {\n      color: mapNumber && mapNumber.props[0][1] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentC, {\n      color: mapNumber && mapNumber.props[0][2] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentD, {\n      color: mapNumber && mapNumber.props[0][3] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentE, {\n      color: mapNumber && mapNumber.props[0][4] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentF, {\n      color: mapNumber && mapNumber.props[0][5] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentG, {\n      color: mapNumber && mapNumber.props[0][6] === 1 ? 'black' : '#DDDDDD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SegmentsDisplay, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = SegmentsDisplay;\nexport default SegmentsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SegmentsDisplay\");","map":{"version":3,"names":["SegmentA","SegmentB","SegmentC","SegmentD","SegmentE","SegmentF","SegmentG","Display","Context","useContext","SegmentsDisplay","mapNumber","context","props"],"sources":["C:/Users/kroth/React/7-segments/src/components/SegmentsDisplay/index.jsx"],"sourcesContent":["import {\r\n  SegmentA,\r\n  SegmentB,\r\n  SegmentC,\r\n  SegmentD,\r\n  SegmentE,\r\n  SegmentF,\r\n  SegmentG,\r\n  Display,\r\n} from './styles'\r\nimport { Context } from '../../context/Context'\r\nimport { useContext } from 'react'\r\n\r\nfunction SegmentsDisplay(mapNumber) {\r\n  const context = useContext(Context)\r\n\r\n  return (\r\n    <Display className=\"Display\">\r\n      <SegmentA\r\n        color={mapNumber && mapNumber.props[0][0] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentA>\r\n      <SegmentB\r\n        color={mapNumber && mapNumber.props[0][1] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentB>\r\n      <SegmentC\r\n        color={mapNumber && mapNumber.props[0][2] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentC>\r\n      <SegmentD\r\n        color={mapNumber && mapNumber.props[0][3] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentD>\r\n      <SegmentE\r\n        color={mapNumber && mapNumber.props[0][4] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentE>\r\n      <SegmentF\r\n        color={mapNumber && mapNumber.props[0][5] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentF>\r\n      <SegmentG\r\n        color={mapNumber && mapNumber.props[0][6] === 1 ? 'black' : '#DDDDDD'}\r\n      ></SegmentG>\r\n    </Display>\r\n  )\r\n}\r\n\r\nexport default SegmentsDisplay\r\n"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,OARF,QASO,UATP;AAUA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;EAAA;;EAClC,MAAMC,OAAO,GAAGH,UAAU,CAACD,OAAD,CAA1B;EAEA,oBACE,QAAC,OAAD;IAAS,SAAS,EAAC,SAAnB;IAAA,wBACE,QAAC,QAAD;MACE,KAAK,EAAEG,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAPF,eAUE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAVF,eAaE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAbF,eAgBE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAhBF,eAmBE,QAAC,QAAD;MACE,KAAK,EAAEF,SAAS,IAAIA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,CAAvC,GAA2C,OAA3C,GAAqD;IAD9D;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA5BQH,e;;KAAAA,e;AA8BT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}