{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M102.1,52A24,24,0,1,1,120,92H24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M190.1,92A24,24,0,1,1,208,132H32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M134.1,212A24,24,0,1,0,152,172H40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M129.5,192.3A24,24,0,1,0,152,160H40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M97.5,63.7A24,24,0,1,1,120,96H24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M185.5,95.7A24,24,0,1,1,208,128H32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M184,184a32,32,0,0,1-62,11.1,8,8,0,1,1,15-5.5A16,16,0,1,0,152,168H40a8,8,0,0,1,0-16H152A32.1,32.1,0,0,1,184,184Zm-64-80A32,32,0,1,0,90,60.9a8,8,0,1,0,15,5.5A16,16,0,1,1,120,88H24a8,8,0,0,0,0,16Zm88-32a32.1,32.1,0,0,0-30,20.9,8,8,0,1,0,15,5.5A16,16,0,1,1,208,120H32a8,8,0,0,0,0,16H208a32,32,0,0,0,0-64Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M129.5,192.3A24,24,0,1,0,152,160H40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M97.5,63.7A24,24,0,1,1,120,96H24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M185.5,95.7A24,24,0,1,1,208,128H32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M129.5,192.3A24,24,0,1,0,152,160H40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M97.5,63.7A24,24,0,1,1,120,96H24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M185.5,95.7A24,24,0,1,1,208,128H32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M129.5,192.3A24,24,0,1,0,152,160H40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M97.5,63.7A24,24,0,1,1,120,96H24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M185.5,95.7A24,24,0,1,1,208,128H32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Wind = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nWind.displayName = \"Wind\";\nexport default Wind;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","Wind","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Wind.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M102.1,52A24,24,0,1,1,120,92H24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M190.1,92A24,24,0,1,1,208,132H32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M134.1,212A24,24,0,1,0,152,172H40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M129.5,192.3A24,24,0,1,0,152,160H40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M97.5,63.7A24,24,0,1,1,120,96H24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M185.5,95.7A24,24,0,1,1,208,128H32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M184,184a32,32,0,0,1-62,11.1,8,8,0,1,1,15-5.5A16,16,0,1,0,152,168H40a8,8,0,0,1,0-16H152A32.1,32.1,0,0,1,184,184Zm-64-80A32,32,0,1,0,90,60.9a8,8,0,1,0,15,5.5A16,16,0,1,1,120,88H24a8,8,0,0,0,0,16Zm88-32a32.1,32.1,0,0,0-30,20.9,8,8,0,1,0,15,5.5A16,16,0,1,1,208,120H32a8,8,0,0,0,0,16H208a32,32,0,0,0,0-64Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M129.5,192.3A24,24,0,1,0,152,160H40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M97.5,63.7A24,24,0,1,1,120,96H24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M185.5,95.7A24,24,0,1,1,208,128H32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M129.5,192.3A24,24,0,1,0,152,160H40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M97.5,63.7A24,24,0,1,1,120,96H24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M185.5,95.7A24,24,0,1,1,208,128H32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M129.5,192.3A24,24,0,1,0,152,160H40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M97.5,63.7A24,24,0,1,1,120,96H24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M185.5,95.7A24,24,0,1,1,208,128H32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Wind = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nWind.displayName = \"Wind\";\n\nexport default Wind;\n"]},"metadata":{},"sourceType":"module"}