{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"172\",\n    x2: \"40\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"188\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"172\",\n    r: \"20\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"84\",\n    x2: \"40\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"84\",\n    x2: \"124\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"172\",\n    x2: \"40\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"188\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"172\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"84\",\n    x2: \"40\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"84\",\n    x2: \"124\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M216,164H194.8a28,28,0,0,0-53.6,0H40a8,8,0,0,0,0,16H141.2a28,28,0,0,0,53.6,0H216a8,8,0,0,0,0-16Z\"\n  }), React.createElement(\"path\", {\n    d: \"M40,92H77.2a28,28,0,0,0,53.6,0H216a8,8,0,0,0,0-16H130.8a28,28,0,0,0-53.6,0H40a8,8,0,0,0,0,16Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"172\",\n    x2: \"40\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"188\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"172\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"84\",\n    x2: \"40\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"84\",\n    x2: \"124\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"172\",\n    x2: \"40\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"188\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"172\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"84\",\n    x2: \"40\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"84\",\n    x2: \"124\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"172\",\n    x2: \"40\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"172\",\n    x2: \"188\",\n    y2: \"172\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"172\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"84\",\n    x2: \"40\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"84\",\n    x2: \"124\",\n    y2: \"84\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"104\",\n    cy: \"84\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar SlidersHorizontal = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nSlidersHorizontal.displayName = \"SlidersHorizontal\";\nexport default SlidersHorizontal;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","opacity","d","renderPath","weight","renderPathForWeight","SlidersHorizontal","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\SlidersHorizontal.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"148\"\n      y1=\"172\"\n      x2=\"40\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"188\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle\n      cx=\"168\"\n      cy=\"172\"\n      r=\"20\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"84\"\n      x2=\"40\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"84\"\n      x2=\"124\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle\n      cx=\"104\"\n      cy=\"84\"\n      r=\"20\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"104\" cy=\"84\" r=\"20\" opacity=\"0.2\" />\n    <line\n      x1=\"148\"\n      y1=\"172\"\n      x2=\"40\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"188\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"168\"\n      cy=\"172\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"84\"\n      x2=\"40\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"84\"\n      x2=\"124\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"104\"\n      cy=\"84\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,164H194.8a28,28,0,0,0-53.6,0H40a8,8,0,0,0,0,16H141.2a28,28,0,0,0,53.6,0H216a8,8,0,0,0,0-16Z\" />\n    <path d=\"M40,92H77.2a28,28,0,0,0,53.6,0H216a8,8,0,0,0,0-16H130.8a28,28,0,0,0-53.6,0H40a8,8,0,0,0,0,16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"148\"\n      y1=\"172\"\n      x2=\"40\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"188\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"168\"\n      cy=\"172\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"84\"\n      x2=\"40\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"84\"\n      x2=\"124\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"104\"\n      cy=\"84\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"148\"\n      y1=\"172\"\n      x2=\"40\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"188\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"168\"\n      cy=\"172\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"84\"\n      x2=\"40\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"84\"\n      x2=\"124\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"104\"\n      cy=\"84\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"148\"\n      y1=\"172\"\n      x2=\"40\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"172\"\n      x2=\"188\"\n      y2=\"172\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"168\"\n      cy=\"172\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"84\"\n      x2=\"40\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"216\"\n      y1=\"84\"\n      x2=\"124\"\n      y2=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"104\"\n      cy=\"84\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst SlidersHorizontal = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nSlidersHorizontal.displayName = \"SlidersHorizontal\";\n\nexport default SlidersHorizontal;\n"]},"metadata":{},"sourceType":"module"}