{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"32\",\n    x2: \"128\",\n    y2: \"64\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"60.1\",\n    x2: \"173.3\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"224\",\n    y1: \"128\",\n    x2: \"192\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"195.9\",\n    x2: \"173.3\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"224\",\n    x2: \"128\",\n    y2: \"192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"195.9\",\n    x2: \"82.7\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"64\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"60.1\",\n    x2: \"82.7\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"32\",\n    x2: \"128\",\n    y2: \"64\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"60.1\",\n    x2: \"173.3\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"224\",\n    y1: \"128\",\n    x2: \"192\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"195.9\",\n    x2: \"173.3\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"224\",\n    x2: \"128\",\n    y2: \"192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"195.9\",\n    x2: \"82.7\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"64\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"60.1\",\n    x2: \"82.7\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M136,32V64a8,8,0,0,1-16,0V32a8,8,0,0,1,16,0Zm37.3,58.7a7.8,7.8,0,0,0,5.6-2.3l22.6-22.6a8,8,0,1,0-11.3-11.3L167.6,77.1a8,8,0,0,0,0,11.3A7.8,7.8,0,0,0,173.3,90.7ZM224,120H192a8,8,0,0,0,0,16h32a8,8,0,0,0,0-16Zm-45.1,47.6a8,8,0,0,0-11.3,11.3l22.6,22.6a8,8,0,0,0,5.7,2.4,7.7,7.7,0,0,0,5.6-2.4,7.9,7.9,0,0,0,0-11.3ZM128,184a8,8,0,0,0-8,8v32a8,8,0,0,0,16,0V192A8,8,0,0,0,128,184ZM77.1,167.6,54.5,190.2a7.9,7.9,0,0,0,0,11.3,7.7,7.7,0,0,0,5.6,2.4,8,8,0,0,0,5.7-2.4l22.6-22.6a8,8,0,0,0-11.3-11.3ZM72,128a8,8,0,0,0-8-8H32a8,8,0,0,0,0,16H64A8,8,0,0,0,72,128ZM65.8,54.5A8,8,0,0,0,54.5,65.8L77.1,88.4a8.1,8.1,0,0,0,11.3,0,8,8,0,0,0,0-11.3Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"32\",\n    x2: \"128\",\n    y2: \"64\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"60.1\",\n    x2: \"173.3\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"224\",\n    y1: \"128\",\n    x2: \"192\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"195.9\",\n    x2: \"173.3\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"224\",\n    x2: \"128\",\n    y2: \"192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"195.9\",\n    x2: \"82.7\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"64\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"60.1\",\n    x2: \"82.7\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"32\",\n    x2: \"128\",\n    y2: \"64\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"60.1\",\n    x2: \"173.3\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"224\",\n    y1: \"128\",\n    x2: \"192\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"195.9\",\n    x2: \"173.3\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"224\",\n    x2: \"128\",\n    y2: \"192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"195.9\",\n    x2: \"82.7\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"64\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"60.1\",\n    x2: \"82.7\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"32\",\n    x2: \"128\",\n    y2: \"64\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"60.1\",\n    x2: \"173.3\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"224\",\n    y1: \"128\",\n    x2: \"192\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"195.9\",\n    y1: \"195.9\",\n    x2: \"173.3\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"224\",\n    x2: \"128\",\n    y2: \"192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"195.9\",\n    x2: \"82.7\",\n    y2: \"173.3\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"64\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"60.1\",\n    y1: \"60.1\",\n    x2: \"82.7\",\n    y2: \"82.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Spinner = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nSpinner.displayName = \"Spinner\";\nexport default Spinner;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","Spinner","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Spinner.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"32\"\n      x2=\"128\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"60.1\"\n      x2=\"173.3\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"224\"\n      y1=\"128\"\n      x2=\"192\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"195.9\"\n      x2=\"173.3\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"224\"\n      x2=\"128\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"195.9\"\n      x2=\"82.7\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"64\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"60.1\"\n      x2=\"82.7\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"32\"\n      x2=\"128\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"60.1\"\n      x2=\"173.3\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"224\"\n      y1=\"128\"\n      x2=\"192\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"195.9\"\n      x2=\"173.3\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"224\"\n      x2=\"128\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"195.9\"\n      x2=\"82.7\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"64\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"60.1\"\n      x2=\"82.7\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M136,32V64a8,8,0,0,1-16,0V32a8,8,0,0,1,16,0Zm37.3,58.7a7.8,7.8,0,0,0,5.6-2.3l22.6-22.6a8,8,0,1,0-11.3-11.3L167.6,77.1a8,8,0,0,0,0,11.3A7.8,7.8,0,0,0,173.3,90.7ZM224,120H192a8,8,0,0,0,0,16h32a8,8,0,0,0,0-16Zm-45.1,47.6a8,8,0,0,0-11.3,11.3l22.6,22.6a8,8,0,0,0,5.7,2.4,7.7,7.7,0,0,0,5.6-2.4,7.9,7.9,0,0,0,0-11.3ZM128,184a8,8,0,0,0-8,8v32a8,8,0,0,0,16,0V192A8,8,0,0,0,128,184ZM77.1,167.6,54.5,190.2a7.9,7.9,0,0,0,0,11.3,7.7,7.7,0,0,0,5.6,2.4,8,8,0,0,0,5.7-2.4l22.6-22.6a8,8,0,0,0-11.3-11.3ZM72,128a8,8,0,0,0-8-8H32a8,8,0,0,0,0,16H64A8,8,0,0,0,72,128ZM65.8,54.5A8,8,0,0,0,54.5,65.8L77.1,88.4a8.1,8.1,0,0,0,11.3,0,8,8,0,0,0,0-11.3Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"32\"\n      x2=\"128\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"60.1\"\n      x2=\"173.3\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"224\"\n      y1=\"128\"\n      x2=\"192\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"195.9\"\n      x2=\"173.3\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"224\"\n      x2=\"128\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"195.9\"\n      x2=\"82.7\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"64\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"60.1\"\n      x2=\"82.7\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"32\"\n      x2=\"128\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"60.1\"\n      x2=\"173.3\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"224\"\n      y1=\"128\"\n      x2=\"192\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"195.9\"\n      x2=\"173.3\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"224\"\n      x2=\"128\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"195.9\"\n      x2=\"82.7\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"64\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"60.1\"\n      x2=\"82.7\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"32\"\n      x2=\"128\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"60.1\"\n      x2=\"173.3\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"224\"\n      y1=\"128\"\n      x2=\"192\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"195.9\"\n      y1=\"195.9\"\n      x2=\"173.3\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"224\"\n      x2=\"128\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"195.9\"\n      x2=\"82.7\"\n      y2=\"173.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"64\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"60.1\"\n      y1=\"60.1\"\n      x2=\"82.7\"\n      y2=\"82.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Spinner = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nSpinner.displayName = \"Spinner\";\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}