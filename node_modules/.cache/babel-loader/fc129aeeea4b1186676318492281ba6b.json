{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"40\",\n    x2: \"40\",\n    y2: \"40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"122\",\n    y: \"106\",\n    width: \"104\",\n    height: \"52\",\n    rx: \"8\",\n    transform: \"translate(306 -42) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"80\",\n    width: \"52\",\n    height: \"144\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"116\",\n    y: \"100\",\n    width: \"112\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"72\",\n    width: \"56\",\n    height: \"152\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"40\",\n    x2: \"40\",\n    y2: \"40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"116\",\n    y: \"100\",\n    width: \"112\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"72\",\n    width: \"56\",\n    height: \"152\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,40a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,40ZM192,64H152a16,16,0,0,0-16,16v96a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V80A16,16,0,0,0,192,64Zm-88,0H64A16,16,0,0,0,48,80V216a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V80A16,16,0,0,0,104,64Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"40\",\n    x2: \"40\",\n    y2: \"40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"116\",\n    y: \"100\",\n    width: \"112\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"72\",\n    width: \"56\",\n    height: \"152\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"40\",\n    x2: \"40\",\n    y2: \"40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"116\",\n    y: \"100\",\n    width: \"112\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"72\",\n    width: \"56\",\n    height: \"152\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"216\",\n    y1: \"40\",\n    x2: \"40\",\n    y2: \"40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"116\",\n    y: \"100\",\n    width: \"112\",\n    height: \"56\",\n    rx: \"8\",\n    transform: \"translate(300 -44) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"72\",\n    width: \"56\",\n    height: \"152\",\n    rx: \"8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar AlignTop = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nAlignTop.displayName = \"AlignTop\";\nexport default AlignTop;","map":{"version":3,"mappings":"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","names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","transform","opacity","d","renderPath","weight","renderPathForWeight","AlignTop","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\AlignTop.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"40\"\n      x2=\"40\"\n      y2=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"122\"\n      y=\"106\"\n      width=\"104\"\n      height=\"52\"\n      rx=\"8\"\n      transform=\"translate(306 -42) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"56\"\n      y=\"80\"\n      width=\"52\"\n      height=\"144\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"116\"\n      y=\"100\"\n      width=\"112\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <rect x=\"56\" y=\"72\" width=\"56\" height=\"152\" rx=\"8\" opacity=\"0.2\" />\n    <line\n      x1=\"216\"\n      y1=\"40\"\n      x2=\"40\"\n      y2=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"116\"\n      y=\"100\"\n      width=\"112\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"56\"\n      y=\"72\"\n      width=\"56\"\n      height=\"152\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,40a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,40ZM192,64H152a16,16,0,0,0-16,16v96a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V80A16,16,0,0,0,192,64Zm-88,0H64A16,16,0,0,0,48,80V216a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V80A16,16,0,0,0,104,64Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"40\"\n      x2=\"40\"\n      y2=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"116\"\n      y=\"100\"\n      width=\"112\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"56\"\n      y=\"72\"\n      width=\"56\"\n      height=\"152\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"40\"\n      x2=\"40\"\n      y2=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"116\"\n      y=\"100\"\n      width=\"112\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"56\"\n      y=\"72\"\n      width=\"56\"\n      height=\"152\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"216\"\n      y1=\"40\"\n      x2=\"40\"\n      y2=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"116\"\n      y=\"100\"\n      width=\"112\"\n      height=\"56\"\n      rx=\"8\"\n      transform=\"translate(300 -44) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"56\"\n      y=\"72\"\n      width=\"56\"\n      height=\"152\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst AlignTop = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nAlignTop.displayName = \"AlignTop\";\n\nexport default AlignTop;\n"]},"metadata":{},"sourceType":"module"}