{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polygon\", {\n    points: \"145 145 167.4 88.5 111 111 88.4 167.6 145 145\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M128,32a96,96,0,1,0,96,96A96,96,0,0,0,128,32Zm17,113L85.6,170.4,111,111l62.1-28.2Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"145 145 173.1 82.8 111 111 85.6 170.4 145 145\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm52.3,62.1-28,62.2a8.2,8.2,0,0,1-4.2,4L88.7,177.8a8.5,8.5,0,0,1-3.1.6,8.1,8.1,0,0,1-5.7-2.3,8,8,0,0,1-1.7-8.8l25.5-59.4a8.2,8.2,0,0,1,4-4.2l62-28.2a8.1,8.1,0,0,1,9,1.7A7.8,7.8,0,0,1,180.3,86.1Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polygon\", {\n    points: \"145 145 173.1 82.8 111 111 85.6 170.4 145 145\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polygon\", {\n    points: \"145 145 173.1 82.8 111 111 85.6 170.4 145 145\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"145 145 173.1 82.8 111 111 85.6 170.4 145 145\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Compass = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCompass.displayName = \"Compass\";\nexport default Compass;","map":{"version":3,"mappings":";;;AAAA;;AAWA,IAAMA,aAAa,gBAAG,IAAIC,GAAJ,EAAtB;AAEAD,aAAa,CAACE,GAAdF,CAAkB,MAAlBA,EAA0B,UAACG,KAAD;EAAA,OACxBC,0CACEA;IACEC,EAAE,EAAC,KADL;IAEEC,EAAE,EAAC,KAFL;IAGEC,CAAC,EAAC,IAHJ;IAIEC,IAAI,EAAC,MAJP;IAKEC,MAAM,EAAEN,KALV;IAMEO,aAAa,EAAC,OANhB;IAOEC,cAAc,EAAC,OAPjB;IAQEC,WAAW,EAAC;EARd,EADFR,EAWEA;IACES,MAAM,EAAC,+CADT;IAEEL,IAAI,EAAC,MAFP;IAGEC,MAAM,EAAEN,KAHV;IAIEO,aAAa,EAAC,OAJhB;IAKEC,cAAc,EAAC,OALjB;IAMEC,WAAW,EAAC;EANd,EAXFR,CADwB;AAA1B;AAuBAJ,aAAa,CAACE,GAAdF,CAAkB,SAAlBA,EAA6B,UAACG,KAAD;EAAA,OAC3BC,0CACEA;IACEU,CAAC,EAAC,oFADJ;IAEEC,OAAO,EAAC;EAFV,EADFX,EAKEA;IACEC,EAAE,EAAC,KADL;IAEEC,EAAE,EAAC,KAFL;IAGEC,CAAC,EAAC,IAHJ;IAIEC,IAAI,EAAC,MAJP;IAKEC,MAAM,EAAEN,KALV;IAMEa,gBAAgB,EAAC,IANnB;IAOEJ,WAAW,EAAC;EAPd,EALFR,EAcEA;IACES,MAAM,EAAC,+CADT;IAEEL,IAAI,EAAC,MAFP;IAGEC,MAAM,EAAEN,KAHV;IAIEO,aAAa,EAAC,OAJhB;IAKEC,cAAc,EAAC,OALjB;IAMEC,WAAW,EAAC;EANd,EAdFR,CAD2B;AAA7B;AA0BAJ,aAAa,CAACE,GAAdF,CAAkB,MAAlBA,EAA0B;EAAA,OACxBI,0CACEA;IAAMU,CAAC,EAAC;EAAR,EADFV,CADwB;AAA1B;AAMAJ,aAAa,CAACE,GAAdF,CAAkB,OAAlBA,EAA2B,UAACG,KAAD;EAAA,OACzBC,0CACEA;IACEC,EAAE,EAAC,KADL;IAEEC,EAAE,EAAC,KAFL;IAGEC,CAAC,EAAC,IAHJ;IAIEC,IAAI,EAAC,MAJP;IAKEC,MAAM,EAAEN,KALV;IAMEO,aAAa,EAAC,OANhB;IAOEC,cAAc,EAAC,OAPjB;IAQEC,WAAW,EAAC;EARd,EADFR,EAWEA;IACES,MAAM,EAAC,+CADT;IAEEL,IAAI,EAAC,MAFP;IAGEC,MAAM,EAAEN,KAHV;IAIEO,aAAa,EAAC,OAJhB;IAKEC,cAAc,EAAC,OALjB;IAMEC,WAAW,EAAC;EANd,EAXFR,CADyB;AAA3B;AAuBAJ,aAAa,CAACE,GAAdF,CAAkB,MAAlBA,EAA0B,UAACG,KAAD;EAAA,OACxBC,0CACEA;IACEC,EAAE,EAAC,KADL;IAEEC,EAAE,EAAC,KAFL;IAGEC,CAAC,EAAC,IAHJ;IAIEC,IAAI,EAAC,MAJP;IAKEC,MAAM,EAAEN,KALV;IAMEO,aAAa,EAAC,OANhB;IAOEC,cAAc,EAAC,OAPjB;IAQEC,WAAW,EAAC;EARd,EADFR,EAWEA;IACES,MAAM,EAAC,+CADT;IAEEL,IAAI,EAAC,MAFP;IAGEC,MAAM,EAAEN,KAHV;IAIEO,aAAa,EAAC,OAJhB;IAKEC,cAAc,EAAC,OALjB;IAMEC,WAAW,EAAC;EANd,EAXFR,CADwB;AAA1B;AAuBAJ,aAAa,CAACE,GAAdF,CAAkB,SAAlBA,EAA6B,UAACG,KAAD;EAAA,OAC3BC,0CACEA;IACEC,EAAE,EAAC,KADL;IAEEC,EAAE,EAAC,KAFL;IAGEC,CAAC,EAAC,IAHJ;IAIEC,IAAI,EAAC,MAJP;IAKEC,MAAM,EAAEN,KALV;IAMEa,gBAAgB,EAAC,IANnB;IAOEJ,WAAW,EAAC;EAPd,EADFR,EAUEA;IACES,MAAM,EAAC,+CADT;IAEEL,IAAI,EAAC,MAFP;IAGEC,MAAM,EAAEN,KAHV;IAIEO,aAAa,EAAC,OAJhB;IAKEC,cAAc,EAAC,OALjB;IAMEC,WAAW,EAAC;EANd,EAVFR,CAD2B;AAA7B;;AAsBA,IAAMa,UAAU,GAAmB,SAA7BA,UAA6B,CAACC,MAAD,EAAqBf,KAArB;EAAA,OACjCgB,mBAAmB,CAACD,MAAD,EAASf,KAAT,EAAgBH,aAAhB,CADc;AAAnC;;AAGA,IAAMoB,OAAO,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;EAAA,OACnDnB,oBAACoB,QAADpB;IAAUmB,GAAG,EAAEA;EAAf,GAAwBD,KAAxB,EAAwBA;IAAOL,UAAU,EAAEA;EAAnBK,CAAxB,EADmD;AAA3B,EAA1B;AAIAF,OAAO,CAACK,WAARL,GAAsB,SAAtBA","names":["pathsByWeight","Map","set","color","React","cx","cy","r","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","d","opacity","strokeMiterlimit","renderPath","weight","renderPathForWeight","Compass","forwardRef","props","ref","IconBase","displayName"],"sources":["C:\\Users\\kroth\\React\\7-segments\\node_modules\\phosphor-react\\src\\icons\\Compass.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polygon\n      points=\"145 145 167.4 88.5 111 111 88.4 167.6 145 145\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,32a96,96,0,1,0,96,96A96,96,0,0,0,128,32Zm17,113L85.6,170.4,111,111l62.1-28.2Z\"\n      opacity=\"0.2\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"145 145 173.1 82.8 111 111 85.6 170.4 145 145\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm52.3,62.1-28,62.2a8.2,8.2,0,0,1-4.2,4L88.7,177.8a8.5,8.5,0,0,1-3.1.6,8.1,8.1,0,0,1-5.7-2.3,8,8,0,0,1-1.7-8.8l25.5-59.4a8.2,8.2,0,0,1,4-4.2l62-28.2a8.1,8.1,0,0,1,9,1.7A7.8,7.8,0,0,1,180.3,86.1Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polygon\n      points=\"145 145 173.1 82.8 111 111 85.6 170.4 145 145\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polygon\n      points=\"145 145 173.1 82.8 111 111 85.6 170.4 145 145\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"145 145 173.1 82.8 111 111 85.6 170.4 145 145\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Compass = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCompass.displayName = \"Compass\";\n\nexport default Compass;\n"]},"metadata":{},"sourceType":"module"}